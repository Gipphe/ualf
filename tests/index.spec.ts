import test from "ava";
import * as ualf from "../src";

test("ualf", (t) => {
  const res = ualf.default(
    "0 2017 10 16 16 01 07 345596160 65.5204 12.7377 -87 0 12 17 134.27 0.40 0.40 0.72 13.1 10.0 -0.0 1 1 0 1"
  );
  t.is(typeof res, "object");
  t.not(res, null);
  t.is(res.version, "0");
  t.is(res.year, "2017");
  t.is(res.month, "10");
  t.is(res.day, "16");
  t.is(res.date.getFullYear(), 2017);
  t.is(res.date.getMonth(), 9);
  t.is(res.date.getDate(), 16);
  t.is(res.date.getHours(), 16);
  t.is(res.date.getMinutes(), 1);
  t.is(res.date.getSeconds(), 7);
  t.is(res.date.getMilliseconds(), 346);
  t.is(res.hours, "16");
  t.is(res.hour, "16");
  t.is(res.minutes, "01");
  t.is(res.seconds, "07");
  t.is(res.nanoseconds, "345596160");
  t.is(res.nano, "345596160");
  t.is(res.latitude, "65.5204");
  t.is(res.lat, "65.5204");
  t.is(res.longitude, "12.7377");
  t.is(res.long, "12.7377");
  t.is(res.lng, "12.7377");
  t.is(res.peakCurrent, "-87");
  t.is(res.multiplicity, "0");
  t.is(res.numSensors, "12");
  t.is(res.numberOfSensors, "12");
  t.is(res.freedom, "17");
  t.is(res.degreesOfFreedom, "17");
  t.is(res.ellipseAngle, "134.27");
  t.is(res.semiMajorAxis, "0.40");
  t.is(res.semiMinorAxis, "0.40");
  t.is(res.chiSquareValue, "0.72");
  t.is(res.riseTime, "13.1");
  t.is(res.peakToZeroTime, "10.0");
  t.is(res.maxRateOfRise, "-0.0");
  t.is(res.cloudIndicator, "1");
  t.is(res.angleIndicator, "1");
  t.is(res.signalIndicator, "0");
  t.is(res.timingIndicator, "1");
});

test("ualf.asNumbers", (t) => {
  const numRes = ualf.asNumbers(
    "0 2017 10 16 16 01 07 345596160 65.5204 12.7377 -87 0 12 17 134.27 0.40 0.40 0.72 13.1 10.0 -0.0 1 1 0 1"
  );
  t.is(typeof numRes, "object");
  t.not(numRes, null);
  t.is(numRes.version, 0);
  t.is(numRes.year, 2017);
  t.is(numRes.month, 10);
  t.is(numRes.day, 16);
  t.is(numRes.date.getFullYear(), 2017);
  t.is(numRes.date.getMonth(), 9);
  t.is(numRes.date.getDate(), 16);
  t.is(numRes.date.getHours(), 16);
  t.is(numRes.date.getMinutes(), 1);
  t.is(numRes.date.getSeconds(), 7);
  t.is(numRes.date.getMilliseconds(), 346);
  t.is(numRes.hours, 16);
  t.is(numRes.hour, 16);
  t.is(numRes.minutes, 1);
  t.is(numRes.seconds, 7);
  t.is(numRes.nanoseconds, 345596160);
  t.is(numRes.nano, 345596160);
  t.is(numRes.latitude, 65.5204);
  t.is(numRes.lat, 65.5204);
  t.is(numRes.longitude, 12.7377);
  t.is(numRes.long, 12.7377);
  t.is(numRes.lng, 12.7377);
  t.is(numRes.peakCurrent, -87);
  t.is(numRes.multiplicity, 0);
  t.is(numRes.numSensors, 12);
  t.is(numRes.numberOfSensors, 12);
  t.is(numRes.freedom, 17);
  t.is(numRes.degreesOfFreedom, 17);
  t.is(numRes.ellipseAngle, 134.27);
  t.is(numRes.semiMajorAxis, 0.4);
  t.is(numRes.semiMinorAxis, 0.4);
  t.is(numRes.chiSquareValue, 0.72);
  t.is(numRes.riseTime, 13.1);
  t.is(numRes.peakToZeroTime, 10.0);
  t.is(numRes.maxRateOfRise, -0.0);
  t.is(numRes.cloudIndicator, 1);
  t.is(numRes.angleIndicator, 1);
  t.is(numRes.signalIndicator, 0);
  t.is(numRes.timingIndicator, 1);
});
